{
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"CVCTypeEnum": {
				"enum": [
					"UNKNOWN",
					"CENTRAL",
					"STATE",
					"PRIVATE"
				],
				"type": "string"
			},
			"CVCSiteAddress": {
				"properties": {
					"block": {
						"type": "string"
					},
					"district": {
						"type": "string"
					},
					"state": {
						"type": "string"
					},
					"city": {
						"type": "string"
					},
					"pincode": {
						"type": "string"
					}
				},
				"required": [
					"block",
					"district",
					"state",
					"pincode"
				],
				"type": "object",
				"additionalProperties": false
			},
			"CVCOperationTime": {
				"properties": {
					"start_time": {
						"type": "string",
						"description": "Format: HH:MM"
					},
					"end_time": {
						"type": "string",
						"description": "Format: HH:MM"
					}
				},
				"required": [
					"start_time",
					"end_time"
				],
				"type": "object",
				"additionalProperties": false
			},
			"GeoPoint": {
				"properties": {
					"latitude": {
						"type": "string"
					},
					"longitude": {
						"type": "string"
					}
				},
				"required": [
					"latitude",
					"longitude"
				],
				"type": "object",
				"additionalProperties": false
			},
			"CVCStatusEnum": {
				"enum": [
					"UNKNOWN",
					"ACTIVE",
					"CLOSED",
					"OUT_OF_STOCK"
				],
				"type": "string"
			},
			"VaccineTypeEnum": {
				"enum": [
					"UNKNOWN",
					"COVAXIN",
					"COVISHIELD"
				],
				"type": "string"
			},
			"Vaccine": {
				"properties": {
					"name": {
						"type": "string"
					},
					"type": {
						"$ref": "#/components/schemas/VaccineTypeEnum"
					},
					"count": {
						"type": "number",
						"format": "double"
					},
					"cost": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"name",
					"type",
					"count",
					"cost"
				],
				"type": "object",
				"additionalProperties": false
			},
			"CowinSession": {
				"properties": {
					"session_id": {
						"type": "string"
					},
					"date": {
						"type": "string"
					},
					"available_capacity": {
						"type": "number",
						"format": "double",
						"description": "Total available capacity of the session."
					},
					"available_capacity_dose1": {
						"type": "number",
						"format": "double",
						"description": "Available capacity for dose 1."
					},
					"available_capacity_dose2": {
						"type": "number",
						"format": "double",
						"description": "Available capacity for dose 2."
					},
					"min_age_limit": {
						"type": "number",
						"format": "double"
					},
					"vaccine": {
						"type": "string"
					},
					"slots": {
						"items": {
							"type": "string"
						},
						"type": "array",
						"description": "Array of slot names"
					}
				},
				"required": [
					"session_id",
					"date",
					"available_capacity",
					"min_age_limit",
					"vaccine",
					"slots"
				],
				"type": "object",
				"additionalProperties": false
			},
			"CVCResponseData": {
				"properties": {
					"id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"cowin_center_id": {
						"type": "number",
						"format": "double"
					},
					"type": {
						"$ref": "#/components/schemas/CVCTypeEnum"
					},
					"address": {
						"$ref": "#/components/schemas/CVCSiteAddress"
					},
					"last_verified_at": {
						"type": "string",
						"format": "date-time"
					},
					"slots": {
						"items": {
							"$ref": "#/components/schemas/CVCOperationTime"
						},
						"type": "array"
					},
					"operation_timings": {
						"$ref": "#/components/schemas/CVCOperationTime"
					},
					"geo": {
						"$ref": "#/components/schemas/GeoPoint"
					},
					"vaccine_count": {
						"type": "number",
						"format": "double"
					},
					"status": {
						"$ref": "#/components/schemas/CVCStatusEnum"
					},
					"next_stock_refresh_on": {
						"type": "string",
						"format": "date-time"
					},
					"google_maps_url": {
						"type": "string"
					},
					"vaccines": {
						"items": {
							"$ref": "#/components/schemas/Vaccine"
						},
						"type": "array"
					},
					"sessions": {
						"items": {
							"$ref": "#/components/schemas/CowinSession"
						},
						"type": "array"
					}
				},
				"required": [
					"id",
					"name",
					"cowin_center_id",
					"type",
					"address",
					"last_verified_at",
					"slots",
					"operation_timings",
					"vaccine_count",
					"status",
					"google_maps_url",
					"vaccines",
					"sessions"
				],
				"type": "object",
				"additionalProperties": false
			},
			"PaginatedCVCData": {
				"properties": {
					"total": {
						"type": "number",
						"format": "double",
						"description": "Total number of pages"
					},
					"page_number": {
						"type": "number",
						"format": "double"
					},
					"page_size": {
						"type": "number",
						"format": "double"
					},
					"results": {
						"items": {
							"$ref": "#/components/schemas/CVCResponseData"
						},
						"type": "array"
					}
				},
				"required": [
					"total",
					"page_number",
					"page_size",
					"results"
				],
				"type": "object",
				"additionalProperties": false
			},
			"SortOrderEnum": {
				"enum": [
					"ASC",
					"DESC"
				],
				"type": "string"
			},
			"CVCRequest": {
				"properties": {
					"district": {
						"type": "string",
						"description": "Name of the district.\nEither this or pincode is required"
					},
					"district_id": {
						"type": "number",
						"format": "double",
						"description": "Cowin district id"
					},
					"pincode": {
						"type": "number",
						"format": "double",
						"description": "Pincode to search with.\nEither this or district is required"
					},
					"page_number": {
						"type": "number",
						"format": "double",
						"default": "1"
					},
					"page_size": {
						"type": "number",
						"format": "double",
						"default": "25"
					},
					"sort": {
						"properties": {
							"vaccine_count": {
								"$ref": "#/components/schemas/SortOrderEnum"
							},
							"distance": {
								"$ref": "#/components/schemas/SortOrderEnum"
							}
						},
						"type": "object"
					},
					"filter": {
						"properties": {
							"availability": {
								"type": "boolean",
								"default": "true"
							},
							"status": {
								"items": {
									"$ref": "#/components/schemas/CVCStatusEnum"
								},
								"type": "array"
							},
							"radius": {
								"type": "number",
								"format": "double",
								"default": "30"
							},
							"vaccines": {
								"items": {
									"$ref": "#/components/schemas/VaccineTypeEnum"
								},
								"type": "array"
							}
						},
						"type": "object"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"State": {
				"description": "If you've taken up the task to update this schema, follow these steps:\n- Get the link to the latest swagger/openapi definition file\n- Current: https://apisetu.gov.in/public/api/cowin\n- Yaml: https://apisetu.gov.in/api_specification_v10/cowin-public-v2.yaml\n- Then run  npx openapi-typescript https://apisetu.gov.in/api_specification_v10/cowin-public-v2.yaml --output temp.ts\n- You'll probably need to make minor edits in code of that package to make it work (content-type header was missing)\n- Copy paste relevant schema from temp.ts and make edits\n\nIt's not completely automated way to do things, but it beats copy pasta the schema by hand\nNote: There's a good chance that data in mongo looks a lot like this schema.\nMake sure you migrate old data over to this format.",
				"properties": {
					"state_id": {
						"type": "number",
						"format": "double"
					},
					"state_name": {
						"type": "string"
					}
				},
				"required": [
					"state_id",
					"state_name"
				],
				"type": "object",
				"additionalProperties": false
			},
			"District": {
				"properties": {
					"state_id": {
						"type": "number",
						"format": "double"
					},
					"district_id": {
						"type": "number",
						"format": "double"
					},
					"district_name": {
						"type": "string"
					}
				},
				"required": [
					"state_id",
					"district_id",
					"district_name"
				],
				"type": "object",
				"additionalProperties": false
			},
			"CallRequest": {
				"properties": {
					"pincode": {
						"type": "number",
						"format": "double"
					},
					"cvc_site_id": {
						"type": "string"
					},
					"claim": {
						"type": "boolean",
						"description": "if set tp true, will lock the cvc for 20 minutes"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"CallResponseEnum": {
				"enum": [
					"RESPONDED",
					"NOT_RESPONDED",
					"WRONG_NUMBER"
				],
				"type": "string"
			},
			"ReportRequest": {
				"properties": {
					"cvc_site_id": {
						"type": "string"
					},
					"call_response": {
						"$ref": "#/components/schemas/CallResponseEnum"
					},
					"status": {
						"$ref": "#/components/schemas/CVCStatusEnum"
					},
					"cvcType": {
						"$ref": "#/components/schemas/CVCTypeEnum"
					},
					"vaccines": {
						"items": {
							"$ref": "#/components/schemas/Vaccine"
						},
						"type": "array"
					},
					"address": {
						"$ref": "#/components/schemas/CVCSiteAddress"
					},
					"operation_timings": {
						"items": {
							"$ref": "#/components/schemas/CVCOperationTime"
						},
						"type": "array"
					},
					"next_stock_refresh_on": {
						"type": "string",
						"format": "date-time"
					},
					"verification_time": {
						"type": "string",
						"format": "date-time"
					}
				},
				"type": "object",
				"additionalProperties": false
			}
		},
		"securitySchemes": {}
	},
	"info": {
		"title": "api-server",
		"version": "1.0.0",
		"contact": {}
	},
	"openapi": "3.0.0",
	"paths": {
		"/api/v1/cvc": {
			"post": {
				"operationId": "Search",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PaginatedCVCData"
								}
							}
						}
					}
				},
				"tags": [
					"CVC"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CVCRequest"
							}
						}
					}
				}
			}
		},
		"/api/v1/meta/states": {
			"get": {
				"operationId": "States",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/State"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"tags": [
					"Meta"
				],
				"security": [],
				"parameters": []
			}
		},
		"/api/v1/meta/states/{state_id}": {
			"get": {
				"operationId": "Districts",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/District"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"tags": [
					"Meta"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "state_id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/api/v1/volunteer/call_request": {
			"post": {
				"operationId": "CallRequest",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"tags": [
					"Volunteer"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CallRequest"
							}
						}
					}
				}
			}
		},
		"/api/v1/volunteer/report": {
			"post": {
				"operationId": "Report",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"tags": [
					"Volunteer"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ReportRequest"
							}
						}
					}
				}
			}
		}
	},
	"servers": [
		{
			"url": "/"
		}
	]
}